#!/usr/bin/env bash

# -----------------------
# Release Version Search
# -----------------------
# Project version format should be MAJOR/MINOR/PATCH/TWEAK, 
# each line has one, like the following:
#
# XXX_VERSION_MAJOR 1 # Can not ignore, must be 0 ~ 9
# XXX_VERSION_MINOR 2 # Can not ignore, must be 0 ~ 9
# XXX_VERSION_PATCH 3 # Can not ignore, must be 0 ~ 9
# XXX_VERSION_TWEAK pre+20181221 # Can be ignored
#
# NOTE:
# The full version format following semver: https://semver.org/
# - The basic version number: MAJOR.MINOR.PATCH 
# - TWEAK compose of pre-release & build-metadata
# The following example will result in: 1.2.3-pre+20181221
#
# Project version search file, full path
# The example file see 'version.h' of current directory
PVS_FILE="$(git rev-parse --show-toplevel)/build/config/version.h"
#
# Project version search prefix for MAJOR
PVS_PREFIX_MAJOR='#define XXX_VERSION_MAJOR'
# Project version search suffix for MAJOR
PVS_SUFFIX_MAJOR=''
#
# Project version search prefix for MINOR
PVS_PREFIX_MINOR='#define XXX_VERSION_MINOR'
# Project version search suffix for MINOR
PVS_SUFFIX_MINOR=''
#
# Project version search prefix for PATCH
PVS_PREFIX_PATCH='#define XXX_VERSION_PATCH'
# Project version search suffix for PATCH
PVS_SUFFIX_PATCH=''
#
# Project version search prefix for TWEAK
PVS_PREFIX_TWEAK='#define XXX_VERSION_TWEAK'
# Project version search suffix for TWEAK
PVS_SUFFIX_TWEAK=''

# -----------------------
# Changelog Auto Update
# -----------------------
# The CHANGELOG.md to update by standard-release, full path if set
# If empty, then use the file CHANGELOG.md of project root
PUC_CHANGELOG=''

# -----------------------
# Release Commit Message
# -----------------------
# Set release commit message, usually this will be project name
# The following example will result in the commit message of:
# chore(release): XXX v1.2.3-pre+20181221
PRC_RELEASE_MSG='XXX'

